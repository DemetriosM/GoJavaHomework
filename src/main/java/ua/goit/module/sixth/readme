TASK 6.1

Create ArraysUtils with following methods
sum(int array[])
min(int array[])
max(int array[])
maxPositive(int array[])
multiplication  (int array[])
modulus(int array[])
secondLargest(int array[])

Copy methods realization from homework 2.1

In addition add new methods

int[] reverse(int[] array) - arranges array elements backwards
int[] findEvenElements(int[] array) - finds even numbers in the array

Class ArraysUtils must match the pattern “Utility class”:
- You cannot create an instance of this class
- All class methods are static

Make sure nobody can inherit your ArraysUtils.

Create class ArraysMain with a main method, where check ArraysUtils class methods (use a random array).


TASK 6.2

Create User class with fields

long id
String firstName
lastName
int salary
int balance

and constructor with all fields.

Note, class User is immutable.


TASK 6.3

Create сlass UserUtils with following methods
User[] uniqueUsers(User[] users) – finds and returns unique users (users are equal when all their field are equal)
User[] usersWithContitionalBalance(User[] users, int balance) - finds and returns the user whose balance is equal to given balance
User[] paySalaryToUsers(User[] users) – pay salary to each user balance
long[] getUsersId(User[] users) - returns an array of user IDs
User[] deleteEmptyUsers(User[] users) – finds and removes empty elements of the array (as a result returns a new array with smaller size)

Make sure paySalaryToUsers and getUsersId methods can’t be overriden in other classes.

Create UsersMain class with main method where create some test users and demonstrate how each method from UserUtils works.


TASK 6.4

Create interface Citizen with method sayHello ().
Create a class-factory CitizenFactory, which statically generates сcitizens of different countries.

Use the following nested sub-classes:
- Englishman
- Chinese
- Russian
- Italian

Each of the sub-class implements the interface Citizen. sayHello () method has to display "Hello" phrase in different languages.
Make sure that the nested classes are not available outside the class-factory.
Create CitizenMain class with a main method, where check how CitizenFactory works.

